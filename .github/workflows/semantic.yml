name: release

on:
  workflow_call:

jobs:
    semantic:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3

        # you'll need to add an `id` in order to access output variables
        - uses: codfish/semantic-release-action@v2
          with:
            dry_run: ${{ env.ACT }} # dryrun true if act testing
            branches: | 
              ['master']
            plugins: |
              [
                [
                  "@semantic-release/commit-analyzer",
                  {
                    "preset": "conventionalcommits",
                    "presetConfig": {}                    
                  }
                ],
                [
                  '@semantic-release/release-notes-generator',
                  {
                    "preset": "conventionalcommits",
                    "presetConfig": {}
                  }                  
                ],
                '@semantic-release/github'                
              ]
            # There is a nice semantic-release-rubygem but the dependencies are broke; latest
            # does not work and the repo has been 3+ years
            additional_packages: |
              [
                '@semantic-release/git',
                'conventional-changelog-conventionalcommits'
              ]

        - name: Output Release Information
          run: |
            echo "New-Release-Published ${{ steps.semantic.outputs.new-release-published }}"
            echo "Release Version ${{ steps.semantic.outputs.release-version }}"
            echo "Release Major Version ${{ steps.semantic.outputs.release-major }}"
            echo "Release Minor Version ${{ steps.semantic.outputs.release-minor }}"
            echo "Release Patch Version ${{ steps.semantic.outputs.release-patch }}"
                
        - name: tag major versions so teams can get the latest major workflows
          if: ${{ steps.semantic.outputs.new-release-published && !env.ACT }}
          run: |          
            git config user.name github-actions[bot]
            git config user.email github-actions[bot]@users.noreply.github.com
            : # Delete the local tag
            git tag -d v${{ steps.semantic.outputs.release-major }} || true
            : # Remove the old tag in the repo
            git push origin :v${{ steps.semantic.outputs.release-major }} || true
            : # Add new annotated tag
            git tag -a v${{ steps.semantic.outputs.release-major }} -m "Release v${{ steps.semantic.outputs.release-major }}"
            : # Push new annotated tag
            git push origin v${{ steps.semantic.outputs.release-major }}
        
